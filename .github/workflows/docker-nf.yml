name: Docker Image CI (Develop)

on:
  push:
    branches: [ "new_fitch" ]
  pull_request:
    branches: [ "new_fitch" ]
  create:
    tags:
      - 'v.*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag test-build:dev

    - name: Run the Docker container
      run: |
        docker run -d -p 8080:80 --name test-container test-build:dev

    - name: Check if the website is available
      run: |
        curl --fail http://localhost:8080 || exit 1

    - name: Get latest image tag
      id: get-latest-tag
      run: |
        set -e
        latest_tag=$(gh api https://api.github.com/orgs/${{ github.repository_owner }}/packages/container/diplom-nginx-app/versions \
          --jq 'map(select(.metadata.container.tags | contains(["latest"]) | not)) | sort_by(.updated_at) | last | .metadata.container.tags[0]')
        
        echo "Latest tag: $latest_tag"
        echo "tag=$latest_tag" >> $GITHUB_ENV
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Increment tag
      id: increment-tag
      run: |
        set -e
        if [[ -z "${{ env.tag }}" ]]; then
          new_tag="1.0.0"
        else
          IFS='.' read -ra parts <<< "${{ env.tag }}"
          new_tag="${parts[0]}.${parts[1]}.$((${parts[2]} + 1))"
        fi
        echo "New tag: $new_tag"
        echo "new_tag=$new_tag" >> $GITHUB_ENV

    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.PRWT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Tag and push Docker image
      run: |
        set -e
        REPO_NAME=$(echo "${{ github.repository_owner }}/diplom-nginx-app" | tr '[:upper:]' '[:lower:]')

        docker tag test-build:dev ghcr.io/$REPO_NAME:${{ env.new_tag }}
        docker push ghcr.io/$REPO_NAME:${{ env.new_tag }}

    - name: Stop and remove the container
      run: |
        docker stop test-container
        docker rm test-container
